<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/ca/georgiancollege/assignment2_alfonso/MainActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ca/georgiancollege/assignment2_alfonso/MainActivity.java" />
              <option name="originalContent" value="package ca.georgiancollege.assignment2_alfonso;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.lifecycle.ViewModelProvider;&#10;&#10;import com.google.android.gms.tasks.OnFailureListener;&#10;import com.google.android.gms.tasks.OnSuccessListener;&#10;import com.google.firebase.firestore.CollectionReference;&#10;import com.google.firebase.firestore.DocumentReference;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;&#10;import ca.georgiancollege.assignment2_alfonso.databinding.ActivityMainBinding;&#10;&#10;public class MainActivity extends AppCompatActivity {&#10;&#10;    ActivityMainBinding binding;&#10;    FirebaseFirestore db;&#10;    UserModel user;&#10;    MovieModel newMovie;&#10;    MovieAdapter myAdapter;&#10;    MovieViewModel viewModel;&#10;    private CollectionReference collectionReference;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        user = getIntent().getSerializableExtra(&quot;UserModel&quot;, UserModel.class);&#10;        binding = ActivityMainBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;        db = FirebaseFirestore.getInstance();&#10;        collectionReference = db.collection(&quot;Users&quot;);&#10;        Log.d(&quot;tag&quot;, &quot;main activity: &quot; + user.toString());&#10;        viewModel = new ViewModelProvider(this).get(MovieViewModel.class);&#10;        viewModel.retrieveMovies(user);&#10;        binding.btnAddMovie.setOnClickListener(v -&gt; {&#10;            // Show the search movie activity&#10;            Intent intent = new Intent(getApplicationContext(), SearchMovie.class);&#10;            intent.putExtra(&quot;UserModel&quot;, user);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;&#10;&#10;}" />
              <option name="updatedContent" value="package ca.georgiancollege.assignment2_alfonso;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.lifecycle.ViewModelProvider;&#10;&#10;import com.google.android.gms.tasks.OnFailureListener;&#10;import com.google.android.gms.tasks.OnSuccessListener;&#10;import com.google.firebase.firestore.CollectionReference;&#10;import com.google.firebase.firestore.DocumentReference;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;&#10;import ca.georgiancollege.assignment2_alfonso.databinding.ActivityMainBinding;&#10;&#10;public class MainActivity extends AppCompatActivity {&#10;&#10;    ActivityMainBinding binding;&#10;    FirebaseFirestore db;&#10;    UserModel user;&#10;    MovieModel newMovie;&#10;    MovieAdapter myAdapter;&#10;    MovieViewModel viewModel;&#10;    private CollectionReference collectionReference;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        user = getIntent().getSerializableExtra(&quot;UserModel&quot;, UserModel.class);&#10;        binding = ActivityMainBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;        db = FirebaseFirestore.getInstance();&#10;        collectionReference = db.collection(&quot;Users&quot;);&#10;        Log.d(&quot;tag&quot;, &quot;main activity: &quot; + user.toString());&#10;        viewModel = new ViewModelProvider(this).get(MovieViewModel.class);&#10;        viewModel.retrieveMovies(user);&#10;        binding.btnAddMovie.setOnClickListener(v -&gt; {&#10;            // Show the search movie activity&#10;            Intent intent = new Intent(getApplicationContext(), SearchMovie.class);&#10;            intent.putExtra(&quot;UserModel&quot;, user);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ca/georgiancollege/assignment2_alfonso/MovieAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ca/georgiancollege/assignment2_alfonso/MovieAdapter.java" />
              <option name="originalContent" value="package ca.georgiancollege.assignment2_alfonso;&#10;&#10;import android.content.Context;&#10;import android.content.Intent;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.squareup.picasso.Picasso;&#10;&#10;import java.util.List;&#10;&#10;public class MovieAdapter extends RecyclerView.Adapter&lt;MyViewHolder&gt; {&#10;&#10;    List&lt;MovieModel&gt; movieList;&#10;    Context context;&#10;&#10;&#10;    public MovieAdapter(List&lt;MovieModel&gt; movieList) {&#10;        this.movieList = movieList;&#10;    }&#10;&#10;&#10;    @NonNull&#10;    @Override&#10;    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View movieView = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.movie_card, parent, false);&#10;&#10;        return new MyViewHolder(movieView);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {&#10;        MovieModel movie = movieList.get(position);&#10;        holder.title.setText(movie.getTitle());&#10;        if(movie.getPoster()!= null){&#10;            Picasso.get()&#10;                    .load(movie.getPoster().toString())&#10;                    .placeholder(R.drawable.broken_image_48)&#10;                    .into(holder.image);&#10;        }else {&#10;            holder.image.setImageResource(R.drawable.broken_image_48);&#10;        }&#10;        holder.released.setText(movie.getYear());&#10;&#10;        holder.itemView.setOnClickListener(v -&gt; {&#10;            Context context = v.getContext();&#10;            if (context instanceof SearchMovie){&#10;                MovieViewModel viewModel = new MovieViewModel();&#10;                viewModel.SaveMovieToCollection(movie);&#10;            }&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return movieList.size();&#10;    }&#10;&#10;    public void updateData(List&lt;MovieModel&gt; movieModels) {&#10;        this.movieList.clear();&#10;        this.movieList.addAll(movieModels);&#10;        notifyDataSetChanged();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package ca.georgiancollege.assignment2_alfonso;&#10;&#10;import android.content.Context;&#10;import android.content.Intent;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.squareup.picasso.Picasso;&#10;&#10;import java.util.List;&#10;&#10;public class MovieAdapter extends RecyclerView.Adapter&lt;MyViewHolder&gt; {&#10;&#10;    List&lt;MovieModel&gt; movieList;&#10;    Context context;&#10;&#10;&#10;    public MovieAdapter(List&lt;MovieModel&gt; movieList) {&#10;        this.movieList = movieList;&#10;    }&#10;&#10;&#10;    @NonNull&#10;    @Override&#10;    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View movieView = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.movie_card, parent, false);&#10;&#10;        return new MyViewHolder(movieView);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {&#10;        MovieModel movie = movieList.get(position);&#10;        holder.title.setText(movie.getTitle());&#10;        if(movie.getPoster()!= null){&#10;            Picasso.get()&#10;                    .load(movie.getPoster().toString())&#10;                    .placeholder(R.drawable.broken_image_48)&#10;                    .into(holder.image);&#10;        }else {&#10;            holder.image.setImageResource(R.drawable.broken_image_48);&#10;        }&#10;        holder.released.setText(movie.getYear());&#10;&#10;        holder.itemView.setOnClickListener(v -&gt; {&#10;            Context context = v.getContext();&#10;            if (context instanceof SearchMovie){&#10;                MovieViewModel viewModel = new MovieViewModel();&#10;                viewModel.SaveMovieToCollection(movie);&#10;            }&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return movieList.size();&#10;    }&#10;&#10;    public void updateData(List&lt;MovieModel&gt; movieModels) {&#10;        this.movieList.clear();&#10;        this.movieList.addAll(movieModels);&#10;        notifyDataSetChanged();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ca/georgiancollege/assignment2_alfonso/MyViewHolder.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ca/georgiancollege/assignment2_alfonso/MyViewHolder.java" />
              <option name="originalContent" value="package ca.georgiancollege.assignment2_alfonso;&#10;&#10;import android.view.View;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;public class MyViewHolder extends RecyclerView.ViewHolder {&#10;&#10;    public ImageView image;&#10;    public TextView title;&#10;    public TextView released;&#10;&#10;&#10;    public MyViewHolder(@NonNull View itemView) {&#10;        super(itemView);&#10;        image = itemView.findViewById(R.id.moviePoster);&#10;        title = itemView.findViewById(R.id.txtViewTitle);&#10;        released = itemView.findViewById(R.id.tvRelease);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package ca.georgiancollege.assignment2_alfonso;&#10;&#10;import android.view.View;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;public class MyViewHolder extends RecyclerView.ViewHolder {&#10;&#10;    public ImageView image;&#10;    public TextView title;&#10;    public TextView released;&#10;&#10;&#10;    public MyViewHolder(@NonNull View itemView) {&#10;        super(itemView);&#10;        image = itemView.findViewById(R.id.moviePoster);&#10;        title = itemView.findViewById(R.id.txtViewTitle);&#10;        released = itemView.findViewById(R.id.tvRelease);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ca/georgiancollege/assignment2_alfonso/SearchMovie.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ca/georgiancollege/assignment2_alfonso/SearchMovie.java" />
              <option name="originalContent" value="package ca.georgiancollege.assignment2_alfonso;&#10;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.View;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.lifecycle.Observer;&#10;import androidx.lifecycle.ViewModelProvider;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;&#10;import java.util.List;&#10;import java.util.Objects;&#10;&#10;import ca.georgiancollege.assignment2_alfonso.databinding.ActivitySearchMovieBinding;&#10;&#10;public class SearchMovie extends AppCompatActivity {&#10;&#10;    ActivitySearchMovieBinding binding;&#10;    MovieAdapter myAdapter;&#10;    MovieViewModel viewModel;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        binding = ActivitySearchMovieBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;        viewModel = new ViewModelProvider(this).get(MovieViewModel.class);&#10;        binding.btnSearch.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                // Get the movie title from the input field&#10;                String movieTitle = Objects.requireNonNull(binding.txtInSearch.getText()).toString().trim();&#10;                // Check if the input is not empty&#10;                if (!movieTitle.isEmpty()) {&#10;                    // Call the ViewModel to search for the movie&#10;                    viewModel.SearchMovie(movieTitle);&#10;                } else {&#10;                    // Show an error message or handle empty input&#10;                    binding.txtInSearch.setError(&quot;Please enter a movie title&quot;);&#10;                }&#10;&#10;            }&#10;        });&#10;&#10;        viewModel.getMovieData().observe(this, new Observer&lt;List&lt;MovieModel&gt;&gt;() {&#10;            @Override&#10;            public void onChanged(List&lt;MovieModel&gt; movieModels) {&#10;                if(myAdapter == null){&#10;                    myAdapter = new MovieAdapter(movieModels);&#10;                    binding.recyclerView.setLayoutManager(new LinearLayoutManager(SearchMovie.this));&#10;                    binding.recyclerView.setAdapter(myAdapter);&#10;                }else {&#10;                    // Update the adapter with the new movie list&#10;                    myAdapter.updateData(movieModels);&#10;                }&#10;            }&#10;        });&#10;&#10;        Log.d(&quot;tag&quot;, &quot;SearchMovie: onCreate called&quot;);&#10;    }&#10;}" />
              <option name="updatedContent" value="package ca.georgiancollege.assignment2_alfonso;&#10;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.View;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.lifecycle.Observer;&#10;import androidx.lifecycle.ViewModelProvider;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;&#10;import java.util.List;&#10;import java.util.Objects;&#10;&#10;import ca.georgiancollege.assignment2_alfonso.databinding.ActivitySearchMovieBinding;&#10;&#10;public class SearchMovie extends AppCompatActivity {&#10;&#10;    ActivitySearchMovieBinding binding;&#10;    MovieAdapter myAdapter;&#10;    MovieViewModel viewModel;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        binding = ActivitySearchMovieBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;        viewModel = new ViewModelProvider(this).get(MovieViewModel.class);&#10;        binding.btnSearch.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                // Get the movie title from the input field&#10;                String movieTitle = Objects.requireNonNull(binding.txtInSearch.getText()).toString().trim();&#10;                // Check if the input is not empty&#10;                if (!movieTitle.isEmpty()) {&#10;                    // Call the ViewModel to search for the movie&#10;                    viewModel.SearchMovie(movieTitle);&#10;                } else {&#10;                    // Show an error message or handle empty input&#10;                    binding.txtInSearch.setError(&quot;Please enter a movie title&quot;);&#10;                }&#10;&#10;            }&#10;        });&#10;&#10;        viewModel.getMovieData().observe(this, new Observer&lt;List&lt;MovieModel&gt;&gt;() {&#10;            @Override&#10;            public void onChanged(List&lt;MovieModel&gt; movieModels) {&#10;                if(myAdapter == null){&#10;                    myAdapter = new MovieAdapter(movieModels);&#10;                    binding.recyclerView.setLayoutManager(new LinearLayoutManager(SearchMovie.this));&#10;                    binding.recyclerView.setAdapter(myAdapter);&#10;                }else {&#10;                    // Update the adapter with the new movie list&#10;                    myAdapter.updateData(movieModels);&#10;                }&#10;            }&#10;        });&#10;&#10;        Log.d(&quot;tag&quot;, &quot;SearchMovie: onCreate called&quot;);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/movie_card.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/movie_card.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/posterLayout&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginEnd=&quot;10dp&quot;&#10;        android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/moviePoster&quot;&#10;            android:layout_width=&quot;@dimen/with_poster&quot;&#10;            android:layout_height=&quot;@dimen/height_poster&quot;&#10;            android:layout_marginStart=&quot;10dp&quot;&#10;            android:layout_marginLeft=&quot;10dp&quot;&#10;            android:layout_marginTop=&quot;10dp&quot;&#10;            android:layout_marginEnd=&quot;10dp&quot;&#10;            android:layout_marginRight=&quot;10dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:contentDescription=&quot;@string/movie_poster&quot;&#10;            app:srcCompat=&quot;@drawable/ic_launcher_background&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/titleLayout&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_alignParentTop=&quot;true&quot;&#10;        android:layout_marginStart=&quot;0dp&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:layout_toEndOf=&quot;@+id/posterLayout&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        tools:ignore=&quot;UseCompoundDrawables&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/movieIcon&quot;&#10;            android:layout_width=&quot;20dp&quot;&#10;            android:layout_height=&quot;20dp&quot;&#10;            android:layout_marginStart=&quot;0dp&quot;&#10;            android:layout_marginTop=&quot;0dp&quot;&#10;            android:contentDescription=&quot;@string/lbMovieTitle&quot;&#10;            android:src=&quot;@drawable/movie_24&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/txtViewTitle&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;5dp&quot;&#10;            android:layout_marginTop=&quot;0dp&quot;&#10;            android:maxLines=&quot;1&quot;&#10;            android:text=&quot;@string/tvMovieTitle&quot;&#10;            android:textColor=&quot;@color/black&quot;&#10;            android:textSize=&quot;16sp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/releaseLayout&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_below=&quot;@+id/titleLayout&quot;&#10;        android:layout_alignParentEnd=&quot;false&quot;&#10;        android:layout_marginStart=&quot;0dp&quot;&#10;        android:layout_marginTop=&quot;0dp&quot;&#10;        android:layout_marginEnd=&quot;0dp&quot;&#10;        android:layout_toEndOf=&quot;@+id/posterLayout&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        tools:ignore=&quot;UseCompoundDrawables&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/releaseIcon&quot;&#10;            android:layout_width=&quot;20dp&quot;&#10;            android:layout_height=&quot;20dp&quot;&#10;            android:layout_marginStart=&quot;0dp&quot;&#10;            android:layout_marginTop=&quot;1dp&quot;&#10;            android:contentDescription=&quot;@string/lbRating&quot;&#10;            android:src=&quot;@drawable/history_24&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvRelease&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;5dp&quot;&#10;            android:layout_marginTop=&quot;0dp&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:text=&quot;@string/tvYear&quot;&#10;            android:textSize=&quot;16sp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/border2&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;1dp&quot;&#10;        android:layout_alignParentBottom=&quot;true&quot;&#10;        android:layout_marginStart=&quot;45dp&quot;&#10;        android:layout_marginEnd=&quot;45dp&quot;&#10;        android:layout_marginBottom=&quot;0dp&quot;&#10;        android:background=&quot;#808080&quot; /&gt;&#10;&#10;&lt;/RelativeLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/posterLayout&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginEnd=&quot;10dp&quot;&#10;        android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/moviePoster&quot;&#10;            android:layout_width=&quot;@dimen/with_poster&quot;&#10;            android:layout_height=&quot;@dimen/height_poster&quot;&#10;            android:layout_marginStart=&quot;10dp&quot;&#10;            android:layout_marginLeft=&quot;10dp&quot;&#10;            android:layout_marginTop=&quot;10dp&quot;&#10;            android:layout_marginEnd=&quot;10dp&quot;&#10;            android:layout_marginRight=&quot;10dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:contentDescription=&quot;@string/movie_poster&quot;&#10;            app:srcCompat=&quot;@drawable/ic_launcher_background&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/titleLayout&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_alignParentTop=&quot;true&quot;&#10;        android:layout_marginStart=&quot;0dp&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:layout_toEndOf=&quot;@+id/posterLayout&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        tools:ignore=&quot;UseCompoundDrawables&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/movieIcon&quot;&#10;            android:layout_width=&quot;20dp&quot;&#10;            android:layout_height=&quot;20dp&quot;&#10;            android:layout_marginStart=&quot;0dp&quot;&#10;            android:layout_marginTop=&quot;0dp&quot;&#10;            android:contentDescription=&quot;@string/lbMovieTitle&quot;&#10;            android:src=&quot;@drawable/movie_24&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/txtViewTitle&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;5dp&quot;&#10;            android:layout_marginTop=&quot;0dp&quot;&#10;            android:maxLines=&quot;1&quot;&#10;            android:text=&quot;@string/tvMovieTitle&quot;&#10;            android:textColor=&quot;@color/black&quot;&#10;            android:textSize=&quot;16sp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/releaseLayout&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_below=&quot;@+id/titleLayout&quot;&#10;        android:layout_alignParentEnd=&quot;false&quot;&#10;        android:layout_marginStart=&quot;0dp&quot;&#10;        android:layout_marginTop=&quot;0dp&quot;&#10;        android:layout_marginEnd=&quot;0dp&quot;&#10;        android:layout_toEndOf=&quot;@+id/posterLayout&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        tools:ignore=&quot;UseCompoundDrawables&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/releaseIcon&quot;&#10;            android:layout_width=&quot;20dp&quot;&#10;            android:layout_height=&quot;20dp&quot;&#10;            android:layout_marginStart=&quot;0dp&quot;&#10;            android:layout_marginTop=&quot;1dp&quot;&#10;            android:contentDescription=&quot;@string/lbRating&quot;&#10;            android:src=&quot;@drawable/history_24&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvRelease&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;5dp&quot;&#10;            android:layout_marginTop=&quot;0dp&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:text=&quot;@string/tvYear&quot;&#10;            android:textSize=&quot;16sp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/border2&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;1dp&quot;&#10;        android:layout_alignParentBottom=&quot;true&quot;&#10;        android:layout_marginStart=&quot;45dp&quot;&#10;        android:layout_marginEnd=&quot;45dp&quot;&#10;        android:layout_marginBottom=&quot;0dp&quot;&#10;        android:background=&quot;#808080&quot; /&gt;&#10;&#10;&lt;/RelativeLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>